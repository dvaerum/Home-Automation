// Generated from Hello.g4 by ANTLR 4.2
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class HelloLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__4=1, T__3=2, T__2=3, T__1=4, T__0=5, Identifier=6, Letter=7, LetterOrDigit=8,
		IntegerLiteral=9, DecimalLiteral=10, Digs=11, Digit=12, NullLiteral=13,
		DOT=14, ASSIGN=15, BANG=16, SEMICOLON=17, EQUAL=18, GT=19, LT=20, LE=21,
		GE=22, NOTEQUAL=23, AND=24, OR=25, INC=26, DEC=27, ADD=28, SUB=29, MUL=30,
		DIV=31, MOD=32, LPAREN=33, RPAREN=34, ADD_ASSIGN=35, SUB_ASSIGN=36, MUL_ASSIGN=37,
		DIV_ASSIGN=38, AND_ASSIGN=39, MOD_ASSIGN=40, EOC=41, NEWLINE=42, EOL=43,
		WS=44, COMMENT=45, LINE_COMMENT=46;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"'Decimal'", "'function'", "'endfunction'", "'Boolean'", "'Integer'",
		"Identifier", "Letter", "LetterOrDigit", "IntegerLiteral", "DecimalLiteral",
		"Digs", "Digit", "'null'", "'.'", "'='", "'!'", "';'", "'=='", "'>'",
		"'<'", "'<='", "'>='", "'!='", "'AND'", "'OR'", "'++'", "'--'", "'+'",
		"'-'", "'*'", "'/'", "'%'", "'('", "')'", "'+='", "'-='", "'*='", "'/='",
		"'&='", "'%='", "EOC", "NEWLINE", "EOL", "WS", "COMMENT", "LINE_COMMENT"
	};
	public static final String[] ruleNames = {
		"T__4", "T__3", "T__2", "T__1", "T__0", "Identifier", "Letter", "LetterOrDigit",
		"IntegerLiteral", "DecimalLiteral", "Digs", "Digit", "NullLiteral", "DOT",
		"UPPERCASE", "LOWERCASE", "CHARACTER", "UNDERSCORE", "NUMBER", "ASSIGN",
		"BANG", "SEMICOLON", "EQUAL", "GT", "LT", "LE", "GE", "NOTEQUAL", "AND",
		"OR", "INC", "DEC", "ADD", "SUB", "MUL", "DIV", "MOD", "LPAREN", "RPAREN",
		"ADD_ASSIGN", "SUB_ASSIGN", "MUL_ASSIGN", "DIV_ASSIGN", "AND_ASSIGN",
		"MOD_ASSIGN", "EOC", "NEWLINE", "EOL", "WS", "COMMENT", "LINE_COMMENT"
	};


	public HelloLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Hello.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\60\u013f\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64"+
		"\t\64\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3"+
		"\3\3\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3"+
		"\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\7\7\u0099\n\7\f"+
		"\7\16\7\u009c\13\7\3\b\3\b\5\b\u00a0\n\b\3\t\3\t\3\t\5\t\u00a5\n\t\3\n"+
		"\3\n\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\5\13\u00b3\n\13"+
		"\3\f\6\f\u00b6\n\f\r\f\16\f\u00b7\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\17"+
		"\3\17\3\20\3\20\3\21\3\21\3\22\3\22\5\22\u00c9\n\22\3\23\3\23\3\24\3\24"+
		"\3\25\3\25\3\26\3\26\3\27\3\27\3\30\3\30\3\30\3\31\3\31\3\32\3\32\3\33"+
		"\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\37\3\37"+
		"\3\37\3 \3 \3 \3!\3!\3!\3\"\3\"\3#\3#\3$\3$\3%\3%\3&\3&\3\'\3\'\3(\3("+
		"\3)\3)\3)\3*\3*\3*\3+\3+\3+\3,\3,\3,\3-\3-\3-\3.\3.\3.\3/\3/\5/\u0114"+
		"\n/\3\60\5\60\u0117\n\60\3\60\3\60\3\61\3\61\3\61\5\61\u011e\n\61\3\62"+
		"\6\62\u0121\n\62\r\62\16\62\u0122\3\62\3\62\3\63\3\63\3\63\3\63\7\63\u012b"+
		"\n\63\f\63\16\63\u012e\13\63\3\63\3\63\3\63\3\63\3\63\3\64\3\64\3\64\3"+
		"\64\7\64\u0139\n\64\f\64\16\64\u013c\13\64\3\64\3\64\3\u012c\2\65\3\3"+
		"\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\2"+
		"!\2#\2%\2\'\2)\21+\22-\23/\24\61\25\63\26\65\27\67\309\31;\32=\33?\34"+
		"A\35C\36E\37G I!K\"M#O$Q%S&U\'W(Y)[*]+_,a-c.e/g\60\3\2\7\3\2C\\\3\2c|"+
		"\3\2\62;\4\2\f\f\17\17\5\2\13\f\16\17\"\"\u0147\2\3\3\2\2\2\2\5\3\2\2"+
		"\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21"+
		"\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2"+
		"\2\2\2\35\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2"+
		"\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3"+
		"\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2"+
		"\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2"+
		"W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3"+
		"\2\2\2\2e\3\2\2\2\2g\3\2\2\2\3i\3\2\2\2\5q\3\2\2\2\7z\3\2\2\2\t\u0086"+
		"\3\2\2\2\13\u008e\3\2\2\2\r\u0096\3\2\2\2\17\u009f\3\2\2\2\21\u00a4\3"+
		"\2\2\2\23\u00a6\3\2\2\2\25\u00b2\3\2\2\2\27\u00b5\3\2\2\2\31\u00b9\3\2"+
		"\2\2\33\u00bb\3\2\2\2\35\u00c0\3\2\2\2\37\u00c2\3\2\2\2!\u00c4\3\2\2\2"+
		"#\u00c8\3\2\2\2%\u00ca\3\2\2\2\'\u00cc\3\2\2\2)\u00ce\3\2\2\2+\u00d0\3"+
		"\2\2\2-\u00d2\3\2\2\2/\u00d4\3\2\2\2\61\u00d7\3\2\2\2\63\u00d9\3\2\2\2"+
		"\65\u00db\3\2\2\2\67\u00de\3\2\2\29\u00e1\3\2\2\2;\u00e4\3\2\2\2=\u00e8"+
		"\3\2\2\2?\u00eb\3\2\2\2A\u00ee\3\2\2\2C\u00f1\3\2\2\2E\u00f3\3\2\2\2G"+
		"\u00f5\3\2\2\2I\u00f7\3\2\2\2K\u00f9\3\2\2\2M\u00fb\3\2\2\2O\u00fd\3\2"+
		"\2\2Q\u00ff\3\2\2\2S\u0102\3\2\2\2U\u0105\3\2\2\2W\u0108\3\2\2\2Y\u010b"+
		"\3\2\2\2[\u010e\3\2\2\2]\u0113\3\2\2\2_\u0116\3\2\2\2a\u011d\3\2\2\2c"+
		"\u0120\3\2\2\2e\u0126\3\2\2\2g\u0134\3\2\2\2ij\7F\2\2jk\7g\2\2kl\7e\2"+
		"\2lm\7k\2\2mn\7o\2\2no\7c\2\2op\7n\2\2p\4\3\2\2\2qr\7h\2\2rs\7w\2\2st"+
		"\7p\2\2tu\7e\2\2uv\7v\2\2vw\7k\2\2wx\7q\2\2xy\7p\2\2y\6\3\2\2\2z{\7g\2"+
		"\2{|\7p\2\2|}\7f\2\2}~\7h\2\2~\177\7w\2\2\177\u0080\7p\2\2\u0080\u0081"+
		"\7e\2\2\u0081\u0082\7v\2\2\u0082\u0083\7k\2\2\u0083\u0084\7q\2\2\u0084"+
		"\u0085\7p\2\2\u0085\b\3\2\2\2\u0086\u0087\7D\2\2\u0087\u0088\7q\2\2\u0088"+
		"\u0089\7q\2\2\u0089\u008a\7n\2\2\u008a\u008b\7g\2\2\u008b\u008c\7c\2\2"+
		"\u008c\u008d\7p\2\2\u008d\n\3\2\2\2\u008e\u008f\7K\2\2\u008f\u0090\7p"+
		"\2\2\u0090\u0091\7v\2\2\u0091\u0092\7g\2\2\u0092\u0093\7i\2\2\u0093\u0094"+
		"\7g\2\2\u0094\u0095\7t\2\2\u0095\f\3\2\2\2\u0096\u009a\5\17\b\2\u0097"+
		"\u0099\5\21\t\2\u0098\u0097\3\2\2\2\u0099\u009c\3\2\2\2\u009a\u0098\3"+
		"\2\2\2\u009a\u009b\3\2\2\2\u009b\16\3\2\2\2\u009c\u009a\3\2\2\2\u009d"+
		"\u00a0\5#\22\2\u009e\u00a0\5%\23\2\u009f\u009d\3\2\2\2\u009f\u009e\3\2"+
		"\2\2\u00a0\20\3\2\2\2\u00a1\u00a5\5#\22\2\u00a2\u00a5\5%\23\2\u00a3\u00a5"+
		"\5\'\24\2\u00a4\u00a1\3\2\2\2\u00a4\u00a2\3\2\2\2\u00a4\u00a3\3\2\2\2"+
		"\u00a5\22\3\2\2\2\u00a6\u00a7\5\27\f\2\u00a7\24\3\2\2\2\u00a8\u00a9\5"+
		"\27\f\2\u00a9\u00aa\5\35\17\2\u00aa\u00ab\5\27\f\2\u00ab\u00b3\3\2\2\2"+
		"\u00ac\u00ad\5\27\f\2\u00ad\u00ae\5\35\17\2\u00ae\u00b3\3\2\2\2\u00af"+
		"\u00b0\5\35\17\2\u00b0\u00b1\5\27\f\2\u00b1\u00b3\3\2\2\2\u00b2\u00a8"+
		"\3\2\2\2\u00b2\u00ac\3\2\2\2\u00b2\u00af\3\2\2\2\u00b3\26\3\2\2\2\u00b4"+
		"\u00b6\5\31\r\2\u00b5\u00b4\3\2\2\2\u00b6\u00b7\3\2\2\2\u00b7\u00b5\3"+
		"\2\2\2\u00b7\u00b8\3\2\2\2\u00b8\30\3\2\2\2\u00b9\u00ba\5\'\24\2\u00ba"+
		"\32\3\2\2\2\u00bb\u00bc\7p\2\2\u00bc\u00bd\7w\2\2\u00bd\u00be\7n\2\2\u00be"+
		"\u00bf\7n\2\2\u00bf\34\3\2\2\2\u00c0\u00c1\7\60\2\2\u00c1\36\3\2\2\2\u00c2"+
		"\u00c3\t\2\2\2\u00c3 \3\2\2\2\u00c4\u00c5\t\3\2\2\u00c5\"\3\2\2\2\u00c6"+
		"\u00c9\5\37\20\2\u00c7\u00c9\5!\21\2\u00c8\u00c6\3\2\2\2\u00c8\u00c7\3"+
		"\2\2\2\u00c9$\3\2\2\2\u00ca\u00cb\7a\2\2\u00cb&\3\2\2\2\u00cc\u00cd\t"+
		"\4\2\2\u00cd(\3\2\2\2\u00ce\u00cf\7?\2\2\u00cf*\3\2\2\2\u00d0\u00d1\7"+
		"#\2\2\u00d1,\3\2\2\2\u00d2\u00d3\7=\2\2\u00d3.\3\2\2\2\u00d4\u00d5\7?"+
		"\2\2\u00d5\u00d6\7?\2\2\u00d6\60\3\2\2\2\u00d7\u00d8\7@\2\2\u00d8\62\3"+
		"\2\2\2\u00d9\u00da\7>\2\2\u00da\64\3\2\2\2\u00db\u00dc\7>\2\2\u00dc\u00dd"+
		"\7?\2\2\u00dd\66\3\2\2\2\u00de\u00df\7@\2\2\u00df\u00e0\7?\2\2\u00e08"+
		"\3\2\2\2\u00e1\u00e2\7#\2\2\u00e2\u00e3\7?\2\2\u00e3:\3\2\2\2\u00e4\u00e5"+
		"\7C\2\2\u00e5\u00e6\7P\2\2\u00e6\u00e7\7F\2\2\u00e7<\3\2\2\2\u00e8\u00e9"+
		"\7Q\2\2\u00e9\u00ea\7T\2\2\u00ea>\3\2\2\2\u00eb\u00ec\7-\2\2\u00ec\u00ed"+
		"\7-\2\2\u00ed@\3\2\2\2\u00ee\u00ef\7/\2\2\u00ef\u00f0\7/\2\2\u00f0B\3"+
		"\2\2\2\u00f1\u00f2\7-\2\2\u00f2D\3\2\2\2\u00f3\u00f4\7/\2\2\u00f4F\3\2"+
		"\2\2\u00f5\u00f6\7,\2\2\u00f6H\3\2\2\2\u00f7\u00f8\7\61\2\2\u00f8J\3\2"+
		"\2\2\u00f9\u00fa\7\'\2\2\u00faL\3\2\2\2\u00fb\u00fc\7*\2\2\u00fcN\3\2"+
		"\2\2\u00fd\u00fe\7+\2\2\u00feP\3\2\2\2\u00ff\u0100\7-\2\2\u0100\u0101"+
		"\7?\2\2\u0101R\3\2\2\2\u0102\u0103\7/\2\2\u0103\u0104\7?\2\2\u0104T\3"+
		"\2\2\2\u0105\u0106\7,\2\2\u0106\u0107\7?\2\2\u0107V\3\2\2\2\u0108\u0109"+
		"\7\61\2\2\u0109\u010a\7?\2\2\u010aX\3\2\2\2\u010b\u010c\7(\2\2\u010c\u010d"+
		"\7?\2\2\u010dZ\3\2\2\2\u010e\u010f\7\'\2\2\u010f\u0110\7?\2\2\u0110\\"+
		"\3\2\2\2\u0111\u0114\5a\61\2\u0112\u0114\7\2\2\3\u0113\u0111\3\2\2\2\u0113"+
		"\u0112\3\2\2\2\u0114^\3\2\2\2\u0115\u0117\7\17\2\2\u0116\u0115\3\2\2\2"+
		"\u0116\u0117\3\2\2\2\u0117\u0118\3\2\2\2\u0118\u0119\7\f\2\2\u0119`\3"+
		"\2\2\2\u011a\u011b\7\17\2\2\u011b\u011e\7\f\2\2\u011c\u011e\t\5\2\2\u011d"+
		"\u011a\3\2\2\2\u011d\u011c\3\2\2\2\u011eb\3\2\2\2\u011f\u0121\t\6\2\2"+
		"\u0120\u011f\3\2\2\2\u0121\u0122\3\2\2\2\u0122\u0120\3\2\2\2\u0122\u0123"+
		"\3\2\2\2\u0123\u0124\3\2\2\2\u0124\u0125\b\62\2\2\u0125d\3\2\2\2\u0126"+
		"\u0127\7\61\2\2\u0127\u0128\7,\2\2\u0128\u012c\3\2\2\2\u0129\u012b\13"+
		"\2\2\2\u012a\u0129\3\2\2\2\u012b\u012e\3\2\2\2\u012c\u012d\3\2\2\2\u012c"+
		"\u012a\3\2\2\2\u012d\u012f\3\2\2\2\u012e\u012c\3\2\2\2\u012f\u0130\7,"+
		"\2\2\u0130\u0131\7\61\2\2\u0131\u0132\3\2\2\2\u0132\u0133\b\63\2\2\u0133"+
		"f\3\2\2\2\u0134\u0135\7\61\2\2\u0135\u0136\7\61\2\2\u0136\u013a\3\2\2"+
		"\2\u0137\u0139\n\5\2\2\u0138\u0137\3\2\2\2\u0139\u013c\3\2\2\2\u013a\u0138"+
		"\3\2\2\2\u013a\u013b\3\2\2\2\u013b\u013d\3\2\2\2\u013c\u013a\3\2\2\2\u013d"+
		"\u013e\b\64\2\2\u013eh\3\2\2\2\17\2\u009a\u009f\u00a4\u00b2\u00b7\u00c8"+
		"\u0113\u0116\u011d\u0122\u012c\u013a\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}