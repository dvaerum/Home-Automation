// Generated from Hello.g4 by ANTLR 4.2
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class HelloLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__33=1, T__32=2, T__31=3, T__30=4, T__29=5, T__28=6, T__27=7, T__26=8,
		T__25=9, T__24=10, T__23=11, T__22=12, T__21=13, T__20=14, T__19=15, T__18=16,
		T__17=17, T__16=18, T__15=19, T__14=20, T__13=21, T__12=22, T__11=23,
		T__10=24, T__9=25, T__8=26, T__7=27, T__6=28, T__5=29, T__4=30, T__3=31,
		T__2=32, T__1=33, T__0=34, Identifier=35, IntegerLiteral=36, DecimalLiteral=37,
		StringLiteral=38, NullLiteral=39, DOT=40, ASSIGN=41, BANG=42, SEMICOLON=43,
		EQUAL=44, GT=45, LT=46, LE=47, GE=48, NOTEQUAL=49, INC=50, DEC=51, ADD=52,
		SUB=53, MUL=54, DIV=55, MOD=56, LPAREN=57, RPAREN=58, ADD_ASSIGN=59, SUB_ASSIGN=60,
		MUL_ASSIGN=61, DIV_ASSIGN=62, AND_ASSIGN=63, MOD_ASSIGN=64, WS=65, COMMENT=66,
		LINE_COMMENT=67;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"']'", "'in'", "'endif'", "','", "'Dictionary'", "'['", "'endfunction'", 
		"'while'", "'Input'", "'if'", "'List'", "'false'", "'until'", "'{'", "'Decimal'", 
		"'PORT'", "'OR'", "'else'", "'}'", "'true'", "'Time'", "'elseif'", "'AND'",
		"'endrepeat'", "'Nothing'", "'function'", "'return'", "'Boolean'", "'String'",
		"'Integer'", "'repeat'", "'Output'", "'returns'", "'foreach'", "Identifier",
		"IntegerLiteral", "DecimalLiteral", "StringLiteral", "'null'", "'.'",
		"'='", "'!'", "';'", "'=='", "'>'", "'<'", "'<='", "'>='", "'!='", "'++'",
		"'--'", "'+'", "'-'", "'*'", "'/'", "'%'", "'('", "')'", "'+='", "'-='", 
		"'*='", "'/='", "'&='", "'%='", "WS", "COMMENT", "LINE_COMMENT"
	};
	public static final String[] ruleNames = {
		"T__33", "T__32", "T__31", "T__30", "T__29", "T__28", "T__27", "T__26",
		"T__25", "T__24", "T__23", "T__22", "T__21", "T__20", "T__19", "T__18",
		"T__17", "T__16", "T__15", "T__14", "T__13", "T__12", "T__11", "T__10",
		"T__9", "T__8", "T__7", "T__6", "T__5", "T__4", "T__3", "T__2", "T__1",
		"T__0", "Identifier", "IntegerLiteral", "DecimalLiteral", "StringLiteral",
		"Letter", "LetterOrDigit", "Digits", "Digit", "NullLiteral", "DOT", "UPPERCASE",
		"LOWERCASE", "CHARACTER", "UNDERSCORE", "ASSIGN", "BANG", "SEMICOLON",
		"EQUAL", "GT", "LT", "LE", "GE", "NOTEQUAL", "INC", "DEC", "ADD", "SUB",
		"MUL", "DIV", "MOD", "LPAREN", "RPAREN", "ADD_ASSIGN", "SUB_ASSIGN", "MUL_ASSIGN",
		"DIV_ASSIGN", "AND_ASSIGN", "MOD_ASSIGN", "WS", "COMMENT", "LINE_COMMENT"
	};


	public HelloLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Hello.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2E\u0201\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\4J\tJ\4K\tK\4L\tL\3\2\3\2\3\3\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\4\3\5"+
		"\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\b\3\b\3\b\3"+
		"\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n"+
		"\3\n\3\n\3\n\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3"+
		"\r\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3"+
		"\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\23\3\23\3\23\3"+
		"\23\3\23\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3"+
		"\27\3\27\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3"+
		"\31\3\31\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3"+
		"\32\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3"+
		"\34\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3"+
		"\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3"+
		" \3 \3 \3 \3!\3!\3!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3#\3#"+
		"\3#\3#\3#\3#\3#\3#\3$\3$\7$\u0167\n$\f$\16$\u016a\13$\3%\3%\3&\3&\3&\3"+
		"&\3&\3&\3&\3&\3&\3&\5&\u0178\n&\3\'\3\'\7\'\u017c\n\'\f\'\16\'\u017f\13"+
		"\'\3\'\3\'\3(\3(\5(\u0185\n(\3)\3)\3)\5)\u018a\n)\3*\3*\7*\u018e\n*\f"+
		"*\16*\u0191\13*\3+\3+\3,\3,\3,\3,\3,\3-\3-\3.\3.\3/\3/\3\60\3\60\5\60"+
		"\u01a2\n\60\3\61\3\61\3\62\3\62\3\63\3\63\3\64\3\64\3\65\3\65\3\65\3\66"+
		"\3\66\3\67\3\67\38\38\38\39\39\39\3:\3:\3:\3;\3;\3;\3<\3<\3<\3=\3=\3>"+
		"\3>\3?\3?\3@\3@\3A\3A\3B\3B\3C\3C\3D\3D\3D\3E\3E\3E\3F\3F\3F\3G\3G\3G"+
		"\3H\3H\3H\3I\3I\3I\3J\6J\u01e3\nJ\rJ\16J\u01e4\3J\3J\3K\3K\3K\3K\7K\u01ed"+
		"\nK\fK\16K\u01f0\13K\3K\3K\3K\3K\3K\3L\3L\3L\3L\7L\u01fb\nL\fL\16L\u01fe"+
		"\13L\3L\3L\3\u01ee\2M\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27"+
		"\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33"+
		"\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O\2Q\2S\2U\2W)Y*[\2]\2_\2a\2c"+
		"+e,g-i.k/m\60o\61q\62s\63u\64w\65y\66{\67}8\1779\u0081:\u0083;\u0085<"+
		"\u0087=\u0089>\u008b?\u008d@\u008fA\u0091B\u0093C\u0095D\u0097E\3\2\7"+
		"\3\2\62;\3\2C\\\3\2c|\5\2\13\f\16\17\"\"\4\2\f\f\17\17\u0204\2\3\3\2\2"+
		"\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3"+
		"\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2"+
		"\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2"+
		"\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2"+
		"\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3"+
		"\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2"+
		"\2\2K\3\2\2\2\2M\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2"+
		"g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3"+
		"\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2\177\3"+
		"\2\2\2\2\u0081\3\2\2\2\2\u0083\3\2\2\2\2\u0085\3\2\2\2\2\u0087\3\2\2\2"+
		"\2\u0089\3\2\2\2\2\u008b\3\2\2\2\2\u008d\3\2\2\2\2\u008f\3\2\2\2\2\u0091"+
		"\3\2\2\2\2\u0093\3\2\2\2\2\u0095\3\2\2\2\2\u0097\3\2\2\2\3\u0099\3\2\2"+
		"\2\5\u009b\3\2\2\2\7\u009e\3\2\2\2\t\u00a4\3\2\2\2\13\u00a6\3\2\2\2\r"+
		"\u00b1\3\2\2\2\17\u00b3\3\2\2\2\21\u00bf\3\2\2\2\23\u00c5\3\2\2\2\25\u00cb"+
		"\3\2\2\2\27\u00ce\3\2\2\2\31\u00d3\3\2\2\2\33\u00d9\3\2\2\2\35\u00df\3"+
		"\2\2\2\37\u00e1\3\2\2\2!\u00e9\3\2\2\2#\u00ee\3\2\2\2%\u00f1\3\2\2\2\'"+
		"\u00f6\3\2\2\2)\u00f8\3\2\2\2+\u00fd\3\2\2\2-\u0102\3\2\2\2/\u0109\3\2"+
		"\2\2\61\u010d\3\2\2\2\63\u0117\3\2\2\2\65\u011f\3\2\2\2\67\u0128\3\2\2"+
		"\29\u012f\3\2\2\2;\u0137\3\2\2\2=\u013e\3\2\2\2?\u0146\3\2\2\2A\u014d"+
		"\3\2\2\2C\u0154\3\2\2\2E\u015c\3\2\2\2G\u0164\3\2\2\2I\u016b\3\2\2\2K"+
		"\u0177\3\2\2\2M\u0179\3\2\2\2O\u0184\3\2\2\2Q\u0189\3\2\2\2S\u018b\3\2"+
		"\2\2U\u0192\3\2\2\2W\u0194\3\2\2\2Y\u0199\3\2\2\2[\u019b\3\2\2\2]\u019d"+
		"\3\2\2\2_\u01a1\3\2\2\2a\u01a3\3\2\2\2c\u01a5\3\2\2\2e\u01a7\3\2\2\2g"+
		"\u01a9\3\2\2\2i\u01ab\3\2\2\2k\u01ae\3\2\2\2m\u01b0\3\2\2\2o\u01b2\3\2"+
		"\2\2q\u01b5\3\2\2\2s\u01b8\3\2\2\2u\u01bb\3\2\2\2w\u01be\3\2\2\2y\u01c1"+
		"\3\2\2\2{\u01c3\3\2\2\2}\u01c5\3\2\2\2\177\u01c7\3\2\2\2\u0081\u01c9\3"+
		"\2\2\2\u0083\u01cb\3\2\2\2\u0085\u01cd\3\2\2\2\u0087\u01cf\3\2\2\2\u0089"+
		"\u01d2\3\2\2\2\u008b\u01d5\3\2\2\2\u008d\u01d8\3\2\2\2\u008f\u01db\3\2"+
		"\2\2\u0091\u01de\3\2\2\2\u0093\u01e2\3\2\2\2\u0095\u01e8\3\2\2\2\u0097"+
		"\u01f6\3\2\2\2\u0099\u009a\7_\2\2\u009a\4\3\2\2\2\u009b\u009c\7k\2\2\u009c"+
		"\u009d\7p\2\2\u009d\6\3\2\2\2\u009e\u009f\7g\2\2\u009f\u00a0\7p\2\2\u00a0"+
		"\u00a1\7f\2\2\u00a1\u00a2\7k\2\2\u00a2\u00a3\7h\2\2\u00a3\b\3\2\2\2\u00a4"+
		"\u00a5\7.\2\2\u00a5\n\3\2\2\2\u00a6\u00a7\7F\2\2\u00a7\u00a8\7k\2\2\u00a8"+
		"\u00a9\7e\2\2\u00a9\u00aa\7v\2\2\u00aa\u00ab\7k\2\2\u00ab\u00ac\7q\2\2"+
		"\u00ac\u00ad\7p\2\2\u00ad\u00ae\7c\2\2\u00ae\u00af\7t\2\2\u00af\u00b0"+
		"\7{\2\2\u00b0\f\3\2\2\2\u00b1\u00b2\7]\2\2\u00b2\16\3\2\2\2\u00b3\u00b4"+
		"\7g\2\2\u00b4\u00b5\7p\2\2\u00b5\u00b6\7f\2\2\u00b6\u00b7\7h\2\2\u00b7"+
		"\u00b8\7w\2\2\u00b8\u00b9\7p\2\2\u00b9\u00ba\7e\2\2\u00ba\u00bb\7v\2\2"+
		"\u00bb\u00bc\7k\2\2\u00bc\u00bd\7q\2\2\u00bd\u00be\7p\2\2\u00be\20\3\2"+
		"\2\2\u00bf\u00c0\7y\2\2\u00c0\u00c1\7j\2\2\u00c1\u00c2\7k\2\2\u00c2\u00c3"+
		"\7n\2\2\u00c3\u00c4\7g\2\2\u00c4\22\3\2\2\2\u00c5\u00c6\7K\2\2\u00c6\u00c7"+
		"\7p\2\2\u00c7\u00c8\7r\2\2\u00c8\u00c9\7w\2\2\u00c9\u00ca\7v\2\2\u00ca"+
		"\24\3\2\2\2\u00cb\u00cc\7k\2\2\u00cc\u00cd\7h\2\2\u00cd\26\3\2\2\2\u00ce"+
		"\u00cf\7N\2\2\u00cf\u00d0\7k\2\2\u00d0\u00d1\7u\2\2\u00d1\u00d2\7v\2\2"+
		"\u00d2\30\3\2\2\2\u00d3\u00d4\7h\2\2\u00d4\u00d5\7c\2\2\u00d5\u00d6\7"+
		"n\2\2\u00d6\u00d7\7u\2\2\u00d7\u00d8\7g\2\2\u00d8\32\3\2\2\2\u00d9\u00da"+
		"\7w\2\2\u00da\u00db\7p\2\2\u00db\u00dc\7v\2\2\u00dc\u00dd\7k\2\2\u00dd"+
		"\u00de\7n\2\2\u00de\34\3\2\2\2\u00df\u00e0\7}\2\2\u00e0\36\3\2\2\2\u00e1"+
		"\u00e2\7F\2\2\u00e2\u00e3\7g\2\2\u00e3\u00e4\7e\2\2\u00e4\u00e5\7k\2\2"+
		"\u00e5\u00e6\7o\2\2\u00e6\u00e7\7c\2\2\u00e7\u00e8\7n\2\2\u00e8 \3\2\2"+
		"\2\u00e9\u00ea\7R\2\2\u00ea\u00eb\7Q\2\2\u00eb\u00ec\7T\2\2\u00ec\u00ed"+
		"\7V\2\2\u00ed\"\3\2\2\2\u00ee\u00ef\7Q\2\2\u00ef\u00f0\7T\2\2\u00f0$\3"+
		"\2\2\2\u00f1\u00f2\7g\2\2\u00f2\u00f3\7n\2\2\u00f3\u00f4\7u\2\2\u00f4"+
		"\u00f5\7g\2\2\u00f5&\3\2\2\2\u00f6\u00f7\7\177\2\2\u00f7(\3\2\2\2\u00f8"+
		"\u00f9\7v\2\2\u00f9\u00fa\7t\2\2\u00fa\u00fb\7w\2\2\u00fb\u00fc\7g\2\2"+
		"\u00fc*\3\2\2\2\u00fd\u00fe\7V\2\2\u00fe\u00ff\7k\2\2\u00ff\u0100\7o\2"+
		"\2\u0100\u0101\7g\2\2\u0101,\3\2\2\2\u0102\u0103\7g\2\2\u0103\u0104\7"+
		"n\2\2\u0104\u0105\7u\2\2\u0105\u0106\7g\2\2\u0106\u0107\7k\2\2\u0107\u0108"+
		"\7h\2\2\u0108.\3\2\2\2\u0109\u010a\7C\2\2\u010a\u010b\7P\2\2\u010b\u010c"+
		"\7F\2\2\u010c\60\3\2\2\2\u010d\u010e\7g\2\2\u010e\u010f\7p\2\2\u010f\u0110"+
		"\7f\2\2\u0110\u0111\7t\2\2\u0111\u0112\7g\2\2\u0112\u0113\7r\2\2\u0113"+
		"\u0114\7g\2\2\u0114\u0115\7c\2\2\u0115\u0116\7v\2\2\u0116\62\3\2\2\2\u0117"+
		"\u0118\7P\2\2\u0118\u0119\7q\2\2\u0119\u011a\7v\2\2\u011a\u011b\7j\2\2"+
		"\u011b\u011c\7k\2\2\u011c\u011d\7p\2\2\u011d\u011e\7i\2\2\u011e\64\3\2"+
		"\2\2\u011f\u0120\7h\2\2\u0120\u0121\7w\2\2\u0121\u0122\7p\2\2\u0122\u0123"+
		"\7e\2\2\u0123\u0124\7v\2\2\u0124\u0125\7k\2\2\u0125\u0126\7q\2\2\u0126"+
		"\u0127\7p\2\2\u0127\66\3\2\2\2\u0128\u0129\7t\2\2\u0129\u012a\7g\2\2\u012a"+
		"\u012b\7v\2\2\u012b\u012c\7w\2\2\u012c\u012d\7t\2\2\u012d\u012e\7p\2\2"+
		"\u012e8\3\2\2\2\u012f\u0130\7D\2\2\u0130\u0131\7q\2\2\u0131\u0132\7q\2"+
		"\2\u0132\u0133\7n\2\2\u0133\u0134\7g\2\2\u0134\u0135\7c\2\2\u0135\u0136"+
		"\7p\2\2\u0136:\3\2\2\2\u0137\u0138\7U\2\2\u0138\u0139\7v\2\2\u0139\u013a"+
		"\7t\2\2\u013a\u013b\7k\2\2\u013b\u013c\7p\2\2\u013c\u013d\7i\2\2\u013d"+
		"<\3\2\2\2\u013e\u013f\7K\2\2\u013f\u0140\7p\2\2\u0140\u0141\7v\2\2\u0141"+
		"\u0142\7g\2\2\u0142\u0143\7i\2\2\u0143\u0144\7g\2\2\u0144\u0145\7t\2\2"+
		"\u0145>\3\2\2\2\u0146\u0147\7t\2\2\u0147\u0148\7g\2\2\u0148\u0149\7r\2"+
		"\2\u0149\u014a\7g\2\2\u014a\u014b\7c\2\2\u014b\u014c\7v\2\2\u014c@\3\2"+
		"\2\2\u014d\u014e\7Q\2\2\u014e\u014f\7w\2\2\u014f\u0150\7v\2\2\u0150\u0151"+
		"\7r\2\2\u0151\u0152\7w\2\2\u0152\u0153\7v\2\2\u0153B\3\2\2\2\u0154\u0155"+
		"\7t\2\2\u0155\u0156\7g\2\2\u0156\u0157\7v\2\2\u0157\u0158\7w\2\2\u0158"+
		"\u0159\7t\2\2\u0159\u015a\7p\2\2\u015a\u015b\7u\2\2\u015bD\3\2\2\2\u015c"+
		"\u015d\7h\2\2\u015d\u015e\7q\2\2\u015e\u015f\7t\2\2\u015f\u0160\7g\2\2"+
		"\u0160\u0161\7c\2\2\u0161\u0162\7e\2\2\u0162\u0163\7j\2\2\u0163F\3\2\2"+
		"\2\u0164\u0168\5O(\2\u0165\u0167\5Q)\2\u0166\u0165\3\2\2\2\u0167\u016a"+
		"\3\2\2\2\u0168\u0166\3\2\2\2\u0168\u0169\3\2\2\2\u0169H\3\2\2\2\u016a"+
		"\u0168\3\2\2\2\u016b\u016c\5S*\2\u016cJ\3\2\2\2\u016d\u016e\5S*\2\u016e"+
		"\u016f\5Y-\2\u016f\u0170\5S*\2\u0170\u0178\3\2\2\2\u0171\u0172\5S*\2\u0172"+
		"\u0173\5Y-\2\u0173\u0178\3\2\2\2\u0174\u0175\5Y-\2\u0175\u0176\5S*\2\u0176"+
		"\u0178\3\2\2\2\u0177\u016d\3\2\2\2\u0177\u0171\3\2\2\2\u0177\u0174\3\2"+
		"\2\2\u0178L\3\2\2\2\u0179\u017d\7$\2\2\u017a\u017c\5Q)\2\u017b\u017a\3"+
		"\2\2\2\u017c\u017f\3\2\2\2\u017d\u017b\3\2\2\2\u017d\u017e\3\2\2\2\u017e"+
		"\u0180\3\2\2\2\u017f\u017d\3\2\2\2\u0180\u0181\7$\2\2\u0181N\3\2\2\2\u0182"+
		"\u0185\5_\60\2\u0183\u0185\5a\61\2\u0184\u0182\3\2\2\2\u0184\u0183\3\2"+
		"\2\2\u0185P\3\2\2\2\u0186\u018a\5_\60\2\u0187\u018a\5a\61\2\u0188\u018a"+
		"\5U+\2\u0189\u0186\3\2\2\2\u0189\u0187\3\2\2\2\u0189\u0188\3\2\2\2\u018a"+
		"R\3\2\2\2\u018b\u018f\5U+\2\u018c\u018e\5U+\2\u018d\u018c\3\2\2\2\u018e"+
		"\u0191\3\2\2\2\u018f\u018d\3\2\2\2\u018f\u0190\3\2\2\2\u0190T\3\2\2\2"+
		"\u0191\u018f\3\2\2\2\u0192\u0193\t\2\2\2\u0193V\3\2\2\2\u0194\u0195\7"+
		"p\2\2\u0195\u0196\7w\2\2\u0196\u0197\7n\2\2\u0197\u0198\7n\2\2\u0198X"+
		"\3\2\2\2\u0199\u019a\7\60\2\2\u019aZ\3\2\2\2\u019b\u019c\t\3\2\2\u019c"+
		"\\\3\2\2\2\u019d\u019e\t\4\2\2\u019e^\3\2\2\2\u019f\u01a2\5[.\2\u01a0"+
		"\u01a2\5]/\2\u01a1\u019f\3\2\2\2\u01a1\u01a0\3\2\2\2\u01a2`\3\2\2\2\u01a3"+
		"\u01a4\7a\2\2\u01a4b\3\2\2\2\u01a5\u01a6\7?\2\2\u01a6d\3\2\2\2\u01a7\u01a8"+
		"\7#\2\2\u01a8f\3\2\2\2\u01a9\u01aa\7=\2\2\u01aah\3\2\2\2\u01ab\u01ac\7"+
		"?\2\2\u01ac\u01ad\7?\2\2\u01adj\3\2\2\2\u01ae\u01af\7@\2\2\u01afl\3\2"+
		"\2\2\u01b0\u01b1\7>\2\2\u01b1n\3\2\2\2\u01b2\u01b3\7>\2\2\u01b3\u01b4"+
		"\7?\2\2\u01b4p\3\2\2\2\u01b5\u01b6\7@\2\2\u01b6\u01b7\7?\2\2\u01b7r\3"+
		"\2\2\2\u01b8\u01b9\7#\2\2\u01b9\u01ba\7?\2\2\u01bat\3\2\2\2\u01bb\u01bc"+
		"\7-\2\2\u01bc\u01bd\7-\2\2\u01bdv\3\2\2\2\u01be\u01bf\7/\2\2\u01bf\u01c0"+
		"\7/\2\2\u01c0x\3\2\2\2\u01c1\u01c2\7-\2\2\u01c2z\3\2\2\2\u01c3\u01c4\7"+
		"/\2\2\u01c4|\3\2\2\2\u01c5\u01c6\7,\2\2\u01c6~\3\2\2\2\u01c7\u01c8\7\61"+
		"\2\2\u01c8\u0080\3\2\2\2\u01c9\u01ca\7\'\2\2\u01ca\u0082\3\2\2\2\u01cb"+
		"\u01cc\7*\2\2\u01cc\u0084\3\2\2\2\u01cd\u01ce\7+\2\2\u01ce\u0086\3\2\2"+
		"\2\u01cf\u01d0\7-\2\2\u01d0\u01d1\7?\2\2\u01d1\u0088\3\2\2\2\u01d2\u01d3"+
		"\7/\2\2\u01d3\u01d4\7?\2\2\u01d4\u008a\3\2\2\2\u01d5\u01d6\7,\2\2\u01d6"+
		"\u01d7\7?\2\2\u01d7\u008c\3\2\2\2\u01d8\u01d9\7\61\2\2\u01d9\u01da\7?"+
		"\2\2\u01da\u008e\3\2\2\2\u01db\u01dc\7(\2\2\u01dc\u01dd\7?\2\2\u01dd\u0090"+
		"\3\2\2\2\u01de\u01df\7\'\2\2\u01df\u01e0\7?\2\2\u01e0\u0092\3\2\2\2\u01e1"+
		"\u01e3\t\5\2\2\u01e2\u01e1\3\2\2\2\u01e3\u01e4\3\2\2\2\u01e4\u01e2\3\2"+
		"\2\2\u01e4\u01e5\3\2\2\2\u01e5\u01e6\3\2\2\2\u01e6\u01e7\bJ\2\2\u01e7"+
		"\u0094\3\2\2\2\u01e8\u01e9\7\61\2\2\u01e9\u01ea\7,\2\2\u01ea\u01ee\3\2"+
		"\2\2\u01eb\u01ed\13\2\2\2\u01ec\u01eb\3\2\2\2\u01ed\u01f0\3\2\2\2\u01ee"+
		"\u01ef\3\2\2\2\u01ee\u01ec\3\2\2\2\u01ef\u01f1\3\2\2\2\u01f0\u01ee\3\2"+
		"\2\2\u01f1\u01f2\7,\2\2\u01f2\u01f3\7\61\2\2\u01f3\u01f4\3\2\2\2\u01f4"+
		"\u01f5\bK\2\2\u01f5\u0096\3\2\2\2\u01f6\u01f7\7\61\2\2\u01f7\u01f8\7\61"+
		"\2\2\u01f8\u01fc\3\2\2\2\u01f9\u01fb\n\6\2\2\u01fa\u01f9\3\2\2\2\u01fb"+
		"\u01fe\3\2\2\2\u01fc\u01fa\3\2\2\2\u01fc\u01fd\3\2\2\2\u01fd\u01ff\3\2"+
		"\2\2\u01fe\u01fc\3\2\2\2\u01ff\u0200\bL\2\2\u0200\u0098\3\2\2\2\r\2\u0168"+
		"\u0177\u017d\u0184\u0189\u018f\u01a1\u01e4\u01ee\u01fc\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}